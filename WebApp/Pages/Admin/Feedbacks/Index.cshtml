@page
@model WebApp.Pages.Admin.Feedbacks.IndexModel
@{
    Layout = "_LayoutAdmin";
}
@{
    ViewData["Title"] = "Index";
}
<h3>Rating Page</h3>

<form asp-page="index" method="get">
    <div class="form-actions no-color">
        <p>
            <input id="SearchString" type="text" name="SearchString" value="@Model.CurrentSearchString" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="index">Back to full list</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                Model
            </th>
            <th>
                Email
            </th>
            <th>
                Rating
            </th>
            <th>
                Comment
            </th>
            <th>
                Status
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Rating)
        {
            <tr>
                <td>
                    <img style="height: 100px;width: 100px;" src="@item.Shoe.ImageUrl" alt="ImageUrl" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shoe.Model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Account.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comment)
                </td>
                <td>
                    @if (item.Status == "Processing")
                    {
                        <span class="text-success">@Html.DisplayFor(modelItem => item.Status)</span>
                    }
                    else if (item.Status == "Approve")
                    {
                        <span class="text-primary">@Html.DisplayFor(modelItem => item.Status)</span>
                    }
                    else if (item.Status == "Reject")
                    {
                        <span class="text-danger">@Html.DisplayFor(modelItem => item.Status)</span>
                    }
                </td>
                <td>
                    <a style="background-color: #007bff; color: #ffffff; padding: 7px 20px; border-radius: 3px; text-decoration: none;" asp-page="./Details" asp-route-id="@item.RatingId">Details</a> |
                    <a style="background-color: forestgreen; color: #ffffff; padding: 7px 20px; border-radius: 3px; text-decoration: none;" asp-page="./Reject" asp-route-id="@item.RatingId">Process</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Rating.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Rating.HasNextPage ? "disabled" : "";
}

<a asp-page="index"
   asp-route-PageIndex="@(Model.Rating.PageIndex - 1)"
   asp-route-SearchString="@Model.CurrentSearchString"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="index"
   asp-route-PageIndex="@(Model.Rating.PageIndex + 1)"
   asp-route-SearchString="@Model.CurrentSearchString"
   class="btn btn-primary @nextDisabled">
    Next
</a>
